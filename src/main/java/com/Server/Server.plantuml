@startuml

title __SERVER's Class Diagram__\n

  namespace  {
    namespace om.Server {
      class com.Server.Server {
          {static} - SERVER_PORT : int
          - isServerListening : boolean
          + listenForConnection()
          + startServer()
          + waitForConnection()
      }
    }
  }
  

  namespace  {
    namespace om.Server {
      class com.Server.ServerDriver {
          {static} + main()
      }
    }
  }
  

  namespace  {
    namespace om.Server {
      class com.Server.ServerStreamSocket {
          - input : BufferedReader
          - output : PrintWriter
          - socket : Socket
          + close()
          + receiveRequest()
          + sendResponse()
          ~ ServerStreamSocket()
          - setStreams()
      }
    }
  }
  

  namespace  {
    namespace om.Server {
      class com.Server.ServerThread {
          + isMessagesSent : boolean
          + limitedMessage : String
          {static} + loggedInUsers : List<User>
          {static} + sessionId : int
          + sessionStarted : boolean
          {static} + userMessages : List<String>
          {static} - MESSAGE_LIMIT : int
          - downloadedMessages : String
          - file : File
          - receivedMessageSplit : List<String>
          + createUser()
          + downloadMessage()
          + handleRequest()
          + isValidUserName()
          + isloggedOff()
          + logIn()
          + run()
          + saveUserInfo()
          + uploadMessageToArrayList()
          ~ ServerThread()
      }
    }
  }
  

  com.Server.ServerStreamSocket -up-|> java.net.Socket
  com.Server.ServerThread .up.|> java.lang.Runnable
  com.Server.ServerThread o-- com.Server.ServerStreamSocket : myDataSocket


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
